System.register(["jimu-core"],(function(e,t){var o={};return{setters:[function(e){o.AbstractMessageAction=e.AbstractMessageAction,o.MessageType=e.MessageType,o.MutableStoreManager=e.MutableStoreManager,o.dataSourceUtils=e.dataSourceUtils,o.loadArcGISJSAPIModule=e.loadArcGISJSAPIModule}],execute:function(){e((()=>{"use strict";var e={79244:e=>{e.exports=o}},t={};function i(o){var l=t[o];if(void 0!==l)return l.exports;var r=t[o]={exports:{}};return e[o](r,r.exports,i),r.exports}i.d=(e,t)=>{for(var o in t)i.o(t,o)&&!i.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var l={};return(()=>{i.r(l),i.d(l,{default:()=>t});var e=i(79244);class t extends e.AbstractMessageAction{constructor(){super(...arguments),this.getLayerDisplayField=e=>{var t,o,i,l,r,a,n,s;return(null===(t=null==e?void 0:e.layer)||void 0===t?void 0:t.displayField)||(null===(o=null==e?void 0:e.layerDefinition)||void 0===o?void 0:o.displayField)||(null===(l=null===(i=null==e?void 0:e.belongToDataSource)||void 0===i?void 0:i.layerDefinition)||void 0===l?void 0:l.displayField)||(null===(r=null==e?void 0:e.layer)||void 0===r?void 0:r.objectIdField)||(null===(a=null==e?void 0:e.layerDefinition)||void 0===a?void 0:a.objectIdField)||(null===(s=null===(n=null==e?void 0:e.belongToDataSource)||void 0===n?void 0:n.layerDefinition)||void 0===s?void 0:s.objectIdField)||"OBJECTID"}}filterMessageDescription(t){return t.messageType===e.MessageType.DataRecordsSelectionChange}filterMessage(e){return!0}onExecute(t){if(t.type===e.MessageType.DataRecordsSelectionChange){const o=t,i=o.records&&o.records[0];if(i){const t=i.feature;e.dataSourceUtils.changeToJSAPIGraphic(t).then((t=>{(0,e.loadArcGISJSAPIModule)("esri/symbols/support/symbolUtils").then((o=>{o.getDisplayedSymbol(t).then((o=>{var i,l;if(t&&"polygon"===(null===(i=t.geometry)||void 0===i?void 0:i.type)){const i=t.geometry,l={type:"polygon",rings:i.rings,spatial:i.spatialReference,attributes:t.attributes?t.attributes:{},displayName:t.attributes[this.getLayerDisplayField(t)],symbol:o.toJSON()};e.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"workflowRuntimeSelectedFeatureObject",l)}else if(t&&"point"===(null===(l=t.geometry)||void 0===l?void 0:l.type)){const o=t.geometry;if(null!==o.latitude&&null!==o.latitude||null!==o.x&&null!==o.y){const i={latitude:o.latitude,longitude:o.longitude,geometry:o,type:"point",spatial:o.spatialReference,attributes:t.attributes?t.attributes:{},displayName:t.attributes[this.getLayerDisplayField(t)].toString()};e.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"workflowRuntimeSelectedFeatureObject",i)}}}))}))}))}}return Promise.resolve(!0)}}})(),l})())}}}));